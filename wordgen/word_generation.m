%Word Generation Task : % Coded by Remya Nair - October 6, 2009
%Generate words for the alphabet cue presented on screen. 
%For 'B' cue, think 'B'. 
%Indicate that a word has been generated by pressing response button. 
% Task modified on Nov 11,2009 such that rest, alpha and B conditions occur
% equally and for equal amounts of time.

clear all; close all; clc;
KbName('UnifyKeyNames');
warning('off','MATLAB:dispatcher:InexactMatch');

basedir = pwd;
subj = input('Subject Initials: ','s');

%suffix for logfile

time = clock;
yr = num2str(time(1));
suffix = ['_' yr(3:4) '_' num2str(time(2)) '_' num2str(time(3)) '_'  num2str(time(4)) '_' num2str(time(5))];

%open logfile

logdir = fullfile(basedir,'log');
logfile = sprintf(strcat(subj,suffix,'_log'));
cd (logdir);
fid = fopen([logfile, '.txt'], 'wt');
  
%color settings

bgColor = [0 0 0];
red_cross  = [255 0 0];
green_cross = [0 255 0];
cue_color = [255 255 255];

%screen settings

rect = Screen(0, 'rect');
scr_wth=rect(3);
scr_hgt=rect(4);

%stim scaling

fontsize = 70;
fontscale = 17.5 * fontsize / 60;


%fixation cross creation

CrossWidth = 13;
rect1=[(rect(3)/2 - CrossWidth - CrossWidth / 2) (rect(4)/2 - CrossWidth / 2) (rect(3)/2 + CrossWidth + CrossWidth / 2) (rect(4)/2 + CrossWidth / 2)]
rect2=[(rect(3)/2 - CrossWidth / 2) (rect(4)/2 - CrossWidth - CrossWidth / 2) (rect(3)/2 + CrossWidth / 2) (rect(4)/2 + CrossWidth + CrossWidth / 2)]
cross_rect=[(rect1)',(rect2)']

centerX = rect(3)/2;
centerY = rect(4)/2;

%Alphabet Cue List

ctrl_cue = ['B'];

all_alpha=['A';'C';'D';'E';'F';'G';'H';'I';'J';'K';'L';'M';'N';'O';'P';'R';'S';'T';'U';'V';'W']; %'Difficult' cues Q,X,Y,Z and Control cue B excluded.
rand('twister',sum(100*clock));
alpha_order=round(1+(20.*rand(5,1)));
while length(unique(alpha_order))<5
    clear alpha_order;
    rand('twister',sum(100*clock));
    alpha_order=round(1+(20.*rand(5,1)));
end;

alpha_cue=[all_alpha(alpha_order(1));all_alpha(alpha_order(2));all_alpha(alpha_order(3));all_alpha(alpha_order(4));all_alpha(alpha_order(5))]

% % % % % % % % Run Order - Random : what to start with - 1=alpha_cue; 2=ctrl_cue
% % % % % % % 
% % % % % % % rand('twister',sum(100*clock));
% % % % % % % run_order=randperm(2)
% % % % % % % run1= run_order(1:1:2);
% % % % % % % run2= run_order(2:-1:1);
% % % % % % % 

% Block Order - Random : Actv/ctrl with fixation in b/n. Note: 1=alpha_cue; 2=ctrl_cue


rand('twister',sum(100*clock));
blk_order=ceil(2.* rand(1,10));
num_of_ones=find(blk_order==1);% to test that 1s and 2s are equal in number
while length(num_of_ones)~=5
    clear blk_order;
    rand('twister',sum(100*clock));
    blk_order=ceil(2.* rand(1,10));
    num_of_ones=find(blk_order==1);
end;

fid = fopen([logfile, '.txt'], 'a+t');
fprintf(fid,'Block Order (1=alpha_cue; 2=ctrl_cue) = %d\n',blk_order);
fprintf(fid,'Alphabet Cues = %s\n',alpha_cue);
%fMRI timing stuff

red_time = 13 ;%red fix cross for 13 secs
green_time = 2 ;% wait 2 secs after trigger during which time green cross is shown
cue_time = 15 ; %time for which alpha or ctrl cue is shown
relax_time = 2;%time for stop and relax cue
% % % % 

w = Screen('OpenWindow', 0, bgColor); 

  Screen(w,'TextFont','Courier New');
  Screen(w,'TextSize',fontsize);
  Screen(w,'TextStyle',0);

fix_red=Screen('Openoffscreenwindow',0,bgColor);
fix_green=Screen('Openoffscreenwindow',0,bgColor);
Screen('FillRect',fix_red,red_cross,cross_rect);
Screen('FillRect',fix_green,green_cross,cross_rect);

% Experiment Begins....

accum_time=0;expStart=0;

%Wait for trigger
       
triggerKey = KbName('5%');%53
escapeKey = KbName('ESCAPE');
answerKey= KbName('1!');%44

trigger = 0;
while ~trigger;
    [trigger,secs,keyCode] = KbCheck;
    if keyCode(triggerKey)
        hidecursor;
        expStart = GetSecs; fprintf(fid,'Scanner trigger received...........\n EXPERIMENT START TIME = %f\n',expStart);
        while getsecs <=expStart+4%initial red fixation cross is only 4 seconds
        Screen('CopyWindow',fix_red,w);
        [VBLTimestamp StimulusOnsetTime FlipTimestamp Missed Beampos]=Screen('Flip',w);
        end;
        accum_time=expStart+4;  
        while getsecs <=accum_time+green_time
            Screen('CopyWindow',fix_green,w);
        [VBLTimestamp StimulusOnsetTime FlipTimestamp Missed Beampos]=Screen('Flip',w);
        end;
        accum_time=accum_time+green_time;
        time_elapsed= getsecs-expStart;
    else
        trigger=0;
    end
end;

 [trigger,secs,keyCode] = KbCheck;
        if trigger
                    if keyCode(escapeKey)
		             	Screen('CloseAll');break;
                    end
        end;
        
alpha_num=1; %counter for alphabets
clear block_start_time;
response_counter=[];
reaction_time=[];
clear xlabel_value;trigger = 0; clear secs ;keyCode=zeros(1,256);
for num_blk=1:length(blk_order)
    if blk_order(num_blk)==1
        block_start_time=getsecs
        alphabet=alpha_cue(alpha_num)
        stimsize = fontscale * length(alphabet);
        sxmid = centerX - stimsize*2;
        symid = centerY - stimsize*2;
        col=0;%counter for responses
  trigger = 0; clear secs ;keyCode=zeros(1,256);
        while getsecs<=accum_time+cue_time
        Screen(w, 'DrawText',alpha_cue(alpha_num), sxmid, symid, cue_color);
        [VBLTimestamp StimOnset FlipTimestamp Missed Beampos]=Screen('Flip',w) ;
                [trigger,secs,keyCode] = KbCheck;
                 if trigger
                    if keyCode(escapeKey)
		             	Screen('CloseAll');break;
                    end
                     if keyCode(answerKey)
                    fprintf(fid,'word generated/key pressed for cue %s at time= %f\n',alphabet,secs);
                     col=col+1;
                     reaction_time(num_blk,col)=secs;
                     end;
                     while KbCheck; end; % stops to check that key has been relaased before proceeding with the loop
                 end;
        end;  
        fprintf(fid,'\n Initial presentation Time for Block# %d Cue: %s = %f\n',num_blk,alphabet,StimOnset);
        fprintf(fid,'Total words generated for Block# %d , cue %s =%d\n',num_blk,alphabet,col);
        response_counter(num_blk)=col;
        xlabel_value(num_blk,:)=char(alphabet);
        accum_time=accum_time+cue_time;
        time_elapsed= getsecs-expStart
        alpha_num=alpha_num+1;
    else %blk_order(num_blk)==2
        block_start_time=getsecs
        stimsize = fontscale * length('B');
        sxmid   = centerX - stimsize;
        symid = centerY - stimsize*2;
        col=0;%counter for responses
         trigger = 0; clear secs ;keyCode=zeros(1,256);
      while getsecs <=accum_time+cue_time
        Screen(w, 'DrawText','B', sxmid, symid, cue_color);
        [VBLTimestamp StimOnset FlipTimestamp Missed Beampos]=Screen('Flip',w) ;
         [trigger,secs,keyCode] = KbCheck;
        if trigger
                    if keyCode(escapeKey)
		             	Screen('CloseAll');break;
                    end
                     if keyCode(answerKey)
                    fprintf(fid,'word generated/key pressed for cue B at time= %f\n',secs);
                     col=col+1;
                     reaction_time(num_blk,col)=secs;
                     end;
                     while KbCheck; end; % stops to check that key has been relaased before proceeding with the loop
                 end;
        end;  
        fprintf(fid,'\nInitial Presentation Time for Block# %d Cue: B = %f\n',num_blk,StimOnset);
        fprintf(fid,'Total words generated for Block# %d , cue B =%d\n',num_blk,col);
        response_counter(num_blk)=col;
        xlabel_value(num_blk,:)=char('B');
        accum_time=accum_time+cue_time;
        time_elapsed= getsecs-expStart
    end;
    
     [trigger,secs,keyCode] = KbCheck;
        if trigger
                    if keyCode(escapeKey)
		             	Screen('CloseAll');break;
                    end
        end;
        stimsize = fontscale * length('Stop and Relax');
        sxmid = centerX - stimsize;
        stimsizeY = fontscale * size('Stop and Relax',1);
        symid = centerY - stimsize*2;
        symid = centerY - stimsizeY*2;
        Screen(w, 'DrawText','Stop and Relax', sxmid, symid, cue_color);
        [VBLTimestamp StimOnset FlipTimestamp Missed Beampos]=Screen('Flip',w) ;
        waitsecs(relax_time);
      fprintf(fid,'\nTime for Block# %d : `Stop and Relax` = %f\n',num_blk,StimOnset);
        accum_time=accum_time+relax_time;
        time_elapsed= getsecs-expStart
        
         [trigger,secs,keyCode] = KbCheck;
        if trigger
                    if keyCode(escapeKey)
		             	Screen('CloseAll');break;
                    end
        end;
        
    %%%here comes the fixation cross
       while getsecs <=accum_time+red_time
            Screen('CopyWindow',fix_red,w);
        [VBLTimestamp StimOnset FlipTimestamp Missed Beampos]=Screen('Flip',w)
        end;
        accum_time=accum_time+red_time;
        while getsecs <=accum_time+green_time
            Screen('CopyWindow',fix_green,w);
        [VBLTimestamp StimOnset FlipTimestamp Missed Beampos]=Screen('Flip',w)
        end;
        accum_time=accum_time+green_time;
        fprintf(fid,'\nTime elapsed for Block# %d = %f\n\n\n',num_blk,(getsecs-block_start_time));
        clear block_start_time;
         [trigger,secs,keyCode] = KbCheck;
        if trigger
                    if keyCode(escapeKey)
		             	Screen('CloseAll');break;
                    end
        end;
end;

       
time_elapsed= getsecs-expStart;
fprintf(fid,'\nTime elapsed for entire experiment= %f\n',time_elapsed);

stimsize = fontscale * length('End of Experiment!');
        sxmid = centerX - stimsize;
        stimsizeY = fontscale * size('End of Experiment!',1);
        symid = centerY - stimsize*2;
        symid = centerY - stimsizeY*2;
        Screen(w, 'DrawText','End of Experiment!', sxmid, symid, cue_color);
        Screen('Flip',w);
fclose(fid);
save (logfile);
Screen('CloseAll');

bar(response_counter);
xvalue=char((xlabel_value)');
xlabel(sprintf('%s\t\t\t\t\t\t\t\t%s\t\t\t\t\t\t\t\t\t%s\t\t\t\t\t\t\t\t\t%s\t\t\t\t\t\t\t\t\t\t%s\t\t\t\t\t\t\t\t\t%s\t\t\t\t\t\t\t\t\t\t\t%s\t\t\t\t\t\t\t\t\t\t%s\t\t\t\t\t\t\t\t\t\t\t%s\t\t\t\t\t\t\t\t\t\t\t%s',xvalue(1),xvalue(2),xvalue(3),xvalue(4),xvalue(5),xvalue(6),xvalue(7),xvalue(8),xvalue(9),xvalue(10)));
ylabel('No. of button presses(words generated)');






    